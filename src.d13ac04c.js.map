{"version":3,"sources":["js/refs.js","js/event.js","js/api-service.js","js/quote.js","js/bg-api.js","js/home-weather.js","index.js"],"names":["form","document","querySelector","favoriteBtn","input","API_KEY","today","fiveDays","getWeatherData","city","page","fetch","then","res","ok","json","Promise","reject","oneCallApi","lat","lon","console","log","quoteMarkup","quote","author","insertAdjacentHTML","response","Error","status","data","catch","error","getRandomNum","min","max","Math","floor","random","img","bgImg","localStorage","getItem","style","backgroundImage","split","Object","entries","map","elem","urls","regular","setItem","markupHomeWeather","temperature","round","main","temp","temperatureMin","temp_min","temperatureMax","temp_max","iconUrl","weather","icon","innerHTML","name","sys","country"],"mappings":"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","file":"src.d13ac04c.js","sourceRoot":"../src","sourcesContent":["export default {\n  form: document.querySelector('form'),\n  favoriteBtn: document.querySelector('#favorites'),\n  input: document.querySelector('.thumb-input__text'),\n};\n","import refs from './refs';\n","// const jsondb = require('../config.json');\n// const API_KEY = jsondb.API_KEY;\nconst API_KEY = '428ed231089210f0f91b7ff93c680cd1';\nexport const today = 'weather';\nexport const fiveDays = 'forecast';\n\nexport function getWeatherData(city, page = today) {\n  return fetch(`https://api.openweathermap.org/data/2.5/${page}?q=${city}&appid=${API_KEY}&units=metric`).then(\n    res => {\n      if (!res.ok) return Promise.reject('404');\n      return res.json();\n    },\n  );\n}\n\nexport function oneCallApi(lat, lon) {\n  return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`).then(\n    res => {\n      if (!res.ok) return Promise.reject('404');\n      return res.json();\n    },\n  );\n}\n\noneCallApi(50.4333 ,30.5167).then(console.log);","const quoteMarkup = (quote, author) => {\n    document.querySelector('.home-day').insertAdjacentHTML('beforeend',\n        `<div class=\"quote\">\n            <p>${quote}</p>\n            <span>${author}</span>\n        <div>`);\n}\nconst quote = fetch(`https://api.goprogram.ai/inspiration`).then(response => {\n    if (!response.ok) {\n        throw new Error(response.status);\n    }\n    return response.json();\n})\n    .then(data => {\n        quoteMarkup(data.quote, data.author);\n    })\n    .catch(error => {\n        console.log(error);\n    });","function getRandomNum(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction img(city) {\n    return fetch(`https://api.unsplash.com/search/photos/?client_id=LZvDZOjmJ3YNQFh2j9aXsuN6LDWTFwfPTOC_ddGKNmc&query=${city}&page=1&per_page=10&orientation=landscape`).then(\n        res => {\n            if (!res.ok) return Promise.reject('404');\n            return res.json();\n        },\n    );\n}\nexport function bgImg(city) {\n    if (localStorage.getItem(city)) document.querySelector('body').style.backgroundImage = `url(${localStorage.getItem(city).split(',')[getRandomNum(1, 10)]})`;\n    else \n    img(city)\n        .then(res => Object.entries(res))\n        .then(res => res[2])\n        .then(res => res[1])\n        .then(res => res.map(elem => elem.urls.regular))\n        // .then(console.log)\n        .then(data => {\n            document.querySelector('body').style.backgroundImage = `url(${data[getRandomNum(1, 10)]})`;\n            localStorage.setItem(city, data);\n        });\n}\n\nbgImg('kyiv')","import { fiveDays, getWeatherData, today } from './api-service';\n\ngetWeatherData('chernihiv', today).then(data => {\n  markupHomeWeather(data);\n});\n\nfunction markupHomeWeather(data) {\n  console.log(data);\n  const temperature = Math.round(data.main.temp);\n  const temperatureMin = Math.round(data.main.temp_min);\n  const temperatureMax = Math.round(data.main.temp_max);\n  const iconCode = data.weather[0].icon;\n  const iconUrl = 'http://openweathermap.org/img/w/' + iconCode + '.png';\n  document.querySelector('.home-weather').innerHTML = `\n      <img src=\"${iconUrl}\" class=\"icon-home-clouds\">\n      <p class=\"home-city\">${data.name}, ${data.sys.country}</p>\n      <div class=\"home-wrap-degrees\">\n        <p class=\"home-degree\">${temperature}</p>\n        <div class=\"home-wrap-temperature\">\n          <p class=\"home-min-degree\"><span>min</span> ${temperatureMin}&#176;</p>\n          <p class=\"home-max-degree\"><span>max</span> ${temperatureMax}&#176;</p>\n        </div>\n      </div>`;\n}\n","import './sass/main.scss';\nimport './js/event';\nimport { fiveDays, getWeatherData, today } from './js/api-service';\nimport './js/quote';\nimport './js/bg-api';\nimport './js/home-weather';\n\ngetWeatherData('kiev', today).then(console.log);\ngetWeatherData('kiev', fiveDays).then(console.log);\n"]}