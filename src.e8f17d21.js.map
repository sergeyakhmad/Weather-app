{"version":3,"sources":["js/refs.js","js/event.js","js/api-service.js","js/quote.js","js/home-weather.js","index.js"],"names":["form","document","querySelector","favoriteBtn","input","API_KEY","today","fiveDays","getWeatherData","city","page","fetch","then","res","ok","json","Promise","reject","oneCallApi","lat","lon","console","log","quoteMarkup","quote","author","innerHTML","arr","response","Error","status","data","catch","error","markupHomeWeather","temperature","Math","round","main","temp","temperatureMin","temp_min","temperatureMax","temp_max","iconUrl","weather","icon","name","sys","country"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,KAAMC,SAASC,cAAc,QAC7BC,YAAaF,SAASC,cAAc,cACpCE,MAAOH,SAASC,cAAc,uBAHjB,QAAA,QAAA;;ACAf,aAAA,IAAA,EAAA,EAAA,QAAA,WAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACwBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,QAAA,WAAA,EAAA,QAAA,SAAA,QAAA,WAAA,EAtBA,MAAMG,EAAU,mCACHC,EAAQ,UAqBrB,QAAA,MAAA,EApBO,MAAMC,EAAW,WAEjB,SAASC,EAAeC,EAAMC,EAAOJ,GACnCK,OAAAA,iDAAiDD,OAAUD,WAAcJ,kBAAwBO,KACtGC,GACOA,EAAIC,GACFD,EAAIE,OADSC,QAAQC,OAAO,QAMlC,SAASC,EAAWC,EAAKC,GACvBT,OAAAA,6DAA6DQ,SAAWC,WAAaf,kBAAwBO,KAClHC,GACOA,EAAIC,GACFD,EAAIE,OADSC,QAAQC,OAAO,QAMzC,QAAA,SAAA,EAAAC,EAAW,QAAS,SAASN,KAAKS,QAAQC;;ACxB1C,MAAMC,EAAc,CAACC,EAAOC,KACxBxB,SAASC,cAAc,UAAUwB,sBAC5BF,oBACGC,kBAGZ,IAAIE,EAAM,GACV,MAAMH,EAAQb,MAAO,wCAAuCC,KAAKgB,IACzD,IAACA,EAASd,GACJ,MAAA,IAAIe,MAAMD,EAASE,QAEtBF,OAAAA,EAASb,SAEfH,KAAKmB,IACFR,EAAYQ,EAAKP,MAAOO,EAAKN,UAEhCO,MAAMC,IACHZ,QAAQC,IAAIW;;ACMnB,aAvBD,IAAA,EAAA,QAAA,iBAMA,SAASC,EAAkBH,GACzBV,QAAQC,IAAIS,GACNI,MAAAA,EAAcC,KAAKC,MAAMN,EAAKO,KAAKC,MACnCC,EAAiBJ,KAAKC,MAAMN,EAAKO,KAAKG,UACtCC,EAAiBN,KAAKC,MAAMN,EAAKO,KAAKK,UAEtCC,EAAU,mCADCb,EAAKc,QAAQ,GAAGC,KAC+B,OAChE7C,SAASC,cAAc,iBAAiBwB,+BACxBkB,4DACWb,EAAKgB,SAAShB,EAAKiB,IAAIC,sFAEnBd,6GAEuBK,sEACAE,6CAlBxD,EAAe,EAAA,gBAAA,YAAapC,EAA5B,OAAmCM,KAAKmB,IACtCG,EAAkBH;;ACIpB,aAPA,QAAA,oBACA,QAAA,cACA,IAAA,EAAA,QAAA,oBACA,QAAA,cACA,QAAA,sBAEA,EAAe,EAAA,gBAAA,OAAQzB,EAAvB,OAA8BM,KAAKS,QAAQC,MAC3C,EAAe,EAAA,gBAAA,OAAQf,EAAvB,UAAiCK,KAAKS,QAAQC","file":"src.e8f17d21.js","sourceRoot":"../src","sourcesContent":["export default {\n  form: document.querySelector('form'),\n  favoriteBtn: document.querySelector('#favorites'),\n  input: document.querySelector('.thumb-input__text'),\n};\n","import refs from './refs';\n","// const jsondb = require('../config.json');\n// const API_KEY = jsondb.API_KEY;\nconst API_KEY = '428ed231089210f0f91b7ff93c680cd1';\nexport const today = 'weather';\nexport const fiveDays = 'forecast';\n\nexport function getWeatherData(city, page = today) {\n  return fetch(`https://api.openweathermap.org/data/2.5/${page}?q=${city}&appid=${API_KEY}&units=metric`).then(\n    res => {\n      if (!res.ok) return Promise.reject('404');\n      return res.json();\n    },\n  );\n}\n\nexport function oneCallApi(lat, lon) {\n  return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`).then(\n    res => {\n      if (!res.ok) return Promise.reject('404');\n      return res.json();\n    },\n  );\n}\n\noneCallApi(50.4333 ,30.5167).then(console.log);","const quoteMarkup = (quote, author) => {\n    document.querySelector('.quote').innerHTML = `\n    <p>${quote}</p>\n    <span>${author}</span>\n    `;\n}\nlet arr = [];\nconst quote = fetch(`https://api.goprogram.ai/inspiration`).then(response => {\n    if (!response.ok) {\n        throw new Error(response.status);\n    }\n    return response.json();\n})\n    .then(data => {\n        quoteMarkup(data.quote, data.author);\n    })\n    .catch(error => {\n        console.log(error);\n    });","import { fiveDays, getWeatherData, today } from './api-service';\n\ngetWeatherData('chernihiv', today).then(data => {\n  markupHomeWeather(data);\n});\n\nfunction markupHomeWeather(data) {\n  console.log(data);\n  const temperature = Math.round(data.main.temp);\n  const temperatureMin = Math.round(data.main.temp_min);\n  const temperatureMax = Math.round(data.main.temp_max);\n  const iconCode = data.weather[0].icon;\n  const iconUrl = 'http://openweathermap.org/img/w/' + iconCode + '.png';\n  document.querySelector('.home-weather').innerHTML = `\n      <img src=\"${iconUrl}\" class=\"icon-home-clouds\">\n      <p class=\"home-city\">${data.name}, ${data.sys.country}</p>\n      <div class=\"home-wrap-degrees\">\n        <p class=\"home-degree\">${temperature}</p>\n        <div class=\"home-wrap-temperature\">\n          <p class=\"home-min-degree\"><span>min</span> ${temperatureMin}&#176;</p>\n          <p class=\"home-max-degree\"><span>max</span> ${temperatureMax}&#176;</p>\n        </div>\n      </div>`;\n}\n","import './sass/main.scss';\nimport './js/event';\nimport { fiveDays, getWeatherData, today } from './js/api-service';\nimport './js/quote';\nimport './js/home-weather';\n\ngetWeatherData('kiev', today).then(console.log);\ngetWeatherData('kiev', fiveDays).then(console.log);\n"]}