{"version":3,"sources":["js/refs.js","js/event.js","js/api-service.js","js/quote.js","index.js"],"names":["form","document","querySelector","favoriteBtn","input","API_KEY","today","fiveDays","getWeatherData","city","page","fetch","then","res","ok","json","Promise","reject","quoteMarkup","quote","author","innerHTML","arr","response","Error","status","data","catch","error","console","log"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,KAAMC,SAASC,cAAc,QAC7BC,YAAaF,SAASC,cAAc,cACpCE,MAAOH,SAASC,cAAc,uBAHjB,QAAA,QAAA;;ACAf,aAAA,IAAA,EAAA,EAAA,QAAA,WAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACaC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,QAAA,SAAA,QAAA,WAAA,EAXD,MAAMG,EAAU,mCACHC,EAAQ,UAUpB,QAAA,MAAA,EATM,MAAMC,EAAW,WAEjB,SAASC,EAAeC,EAAMC,EAAOJ,GACnCK,OAAAA,iDAAiDD,OAAUD,WAAcJ,KAAWO,KACzFC,GACOA,EAAIC,GACFD,EAAIE,OADSC,QAAQC,OAAO,QAIxC,QAAA,SAAA;;ACbD,MAAMC,EAAc,CAACC,EAAOC,KACxBnB,SAASC,cAAc,UAAUmB,sBAC5BF,oBACGC,kBAGZ,IAAIE,EAAM,GACV,MAAMH,EAAQR,MAAO,wCAAuCC,KAAKW,IACzD,IAACA,EAAST,GACJ,MAAA,IAAIU,MAAMD,EAASE,QAEtBF,OAAAA,EAASR,SAEfH,KAAKc,IACFR,EAAYQ,EAAKP,MAAOO,EAAKN,UAEhCO,MAAMC,IACHC,QAAQC,IAAIF;;ACXpB,aANA,QAAA,oBACA,QAAA,cACA,IAAA,EAAA,QAAA,oBACA,QAAA,eAEA,EAAe,EAAA,gBAAA,OAAQtB,EAAvB,OAA8BM,KAAKiB,QAAQC,MAC3C,EAAe,EAAA,gBAAA,OAAQvB,EAAvB,UAAiCK,KAAKiB,QAAQC","file":"src.8590c5e7.js","sourceRoot":"../src","sourcesContent":["export default {\n  form: document.querySelector('form'),\n  favoriteBtn: document.querySelector('#favorites'),\n  input: document.querySelector('.thumb-input__text'),\n};\n","import refs from './refs';\n","// const jsondb = require('../config.json');\n// const API_KEY = jsondb.API_KEY;\nconst API_KEY = '428ed231089210f0f91b7ff93c680cd1';\nexport const today = 'weather';\nexport const fiveDays = 'forecast';\n\nexport function getWeatherData(city, page = today) {\n  return fetch(`https://api.openweathermap.org/data/2.5/${page}?q=${city}&appid=${API_KEY}`).then(\n    res => {\n      if (!res.ok) return Promise.reject('404');\n      return res.json();\n    },\n  );\n}\n","const quoteMarkup = (quote, author) => {\n    document.querySelector('.quote').innerHTML = `\n    <p>${quote}</p>\n    <span>${author}</span>\n    `;\n}\nlet arr = [];\nconst quote = fetch(`https://api.goprogram.ai/inspiration`).then(response => {\n    if (!response.ok) {\n        throw new Error(response.status);\n    }\n    return response.json();\n})\n    .then(data => {\n        quoteMarkup(data.quote, data.author);\n    })\n    .catch(error => {\n        console.log(error);\n    });","import './sass/main.scss';\nimport './js/event';\nimport { fiveDays, getWeatherData, today } from './js/api-service';\nimport './js/quote'\n\ngetWeatherData('kiev', today).then(console.log);\ngetWeatherData('kiev', fiveDays).then(console.log);"]}